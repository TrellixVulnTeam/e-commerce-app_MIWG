{"ast":null,"code":"import { auth } from '../actions/actionTypes';\nconst authInitialState = {\n  JWT_TOKEN: null,\n  authError: '',\n  loading: false\n};\n\nconst loginReducer = (state = authInitialState, action) => {\n  switch (action.type) {\n    case auth.LOGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case auth.LOGIN_SUCCESS:\n      return {\n        loading: false,\n        JWT_TOKEN: action.payload,\n        authError: ''\n      };\n\n    case auth.LOGIN_FAILURE:\n      return {\n        loading: false,\n        JWT_TOKEN: '',\n        authError: action.payload\n      };\n\n    case auth.LOGOUT:\n      return {\n        loading: false,\n        JWT_TOKEN: '',\n        authError: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/nazararcakov/Desktop/Programming/Frontend/React/e-commerce/client/src/redux/reducers/loginReducer.ts"],"names":["auth","authInitialState","JWT_TOKEN","authError","loading","loginReducer","state","action","type","LOGIN","LOGIN_SUCCESS","payload","LOGIN_FAILURE","LOGOUT"],"mappings":"AACA,SAASA,IAAT,QAAqB,wBAArB;AAQA,MAAMC,gBAAmC,GAAG;AAC1CC,EAAAA,SAAS,EAAE,IAD+B;AAE1CC,EAAAA,SAAS,EAAE,EAF+B;AAG1CC,EAAAA,OAAO,EAAE;AAHiC,CAA5C;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2BM,MAA3B,KAAiD;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,IAAI,CAACS,KAAV;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKJ,IAAI,CAACU,aAAV;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,KADJ;AAELF,QAAAA,SAAS,EAAEK,MAAM,CAACI,OAFb;AAGLR,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKH,IAAI,CAACY,aAAV;AACE,aAAO;AACLR,QAAAA,OAAO,EAAE,KADJ;AAELF,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAHb,OAAP;;AAKF,SAAKX,IAAI,CAACa,MAAV;AACE,aAAO;AACLT,QAAAA,OAAO,EAAE,KADJ;AAELF,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAHb,OAAP;;AAMF;AACE,aAAOL,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,YAAf","sourcesContent":["import { AnyAction } from 'redux';\nimport { auth } from '../actions/actionTypes';\n\ninterface IAuthInitialState {\n  JWT_TOKEN: null | string;\n  authError: string;\n  loading: boolean;\n}\n\nconst authInitialState: IAuthInitialState = {\n  JWT_TOKEN: null,\n  authError: '',\n  loading: false,\n};\n\nconst loginReducer = (state = authInitialState, action: AnyAction) => {\n  switch (action.type) {\n    case auth.LOGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n    case auth.LOGIN_SUCCESS:\n      return {\n        loading: false,\n        JWT_TOKEN: action.payload,\n        authError: '',\n      };\n    case auth.LOGIN_FAILURE:\n      return {\n        loading: false,\n        JWT_TOKEN: '',\n        authError: action.payload,\n      };\n    case auth.LOGOUT:\n      return {\n        loading: false,\n        JWT_TOKEN: '',\n        authError: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}